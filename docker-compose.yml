version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - kafka
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  minio:
    container_name: minio
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniopassword
    command: server --console-address ":9001" /data
    networks:
      - aws
  postgres-resource:
    container_name: postgres-resource
    image: postgres
    environment:
      POSTGRES_DB: resources
      POSTGRES_USER: pedyk
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-resource:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
  postgres-song:
    container_name: postgres-song
    image: postgres
    environment:
      POSTGRES_DB: songs
      POSTGRES_USER: pedyk
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-song:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres


networks:
  postgres:
    driver: bridge
  aws:
    driver: bridge
  kafka:
    driver: bridge

volumes:
  minio:
  postgres-resource:
  postgres-song:
  pgadmin: